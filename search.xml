<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 搭建个人博客教程</title>
    <url>/2020/10/06/20201006/</url>
    <content><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h1 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1 准备工作"></a>1 准备工作</h1><h2 id="1-1-注册-GitHub-账号"><a href="#1-1-注册-GitHub-账号" class="headerlink" title="1.1 注册 GitHub 账号"></a>1.1 注册 GitHub 账号</h2><p>访问 <a href="http://www.google.com/">GitHub 官网</a>注册 GitHub 账号并进行邮箱验证。<br><img src="/images/20201006/1.png" alt="avatar"></p>
<h2 id="1-2-安装-Node-js-和-nmp"><a href="#1-2-安装-Node-js-和-nmp" class="headerlink" title="1.2 安装 Node.js 和 nmp"></a>1.2 安装 Node.js 和 nmp</h2><p>访问 <a href="https://nodejs.org/">Node.js 官网</a>安装 Node.js，nmp 是随同 Node.js 一起安装的包管理工具。<br><img src="/images/20201006/2.png" alt="avatar"></p>
<h2 id="1-3-安装-Git-for-Windows"><a href="#1-3-安装-Git-for-Windows" class="headerlink" title="1.3 安装 Git for Windows"></a>1.3 安装 Git for Windows</h2><p>访问 <a href="https://gitforwindows.org/">Git 官网</a>安装 Git for Windows。<br><img src="/images/20201006/3.png" alt="avatar"></p>
<h1 id="2-搭建-GitHub-博客"><a href="#2-搭建-GitHub-博客" class="headerlink" title="2 搭建 GitHub 博客"></a>2 搭建 GitHub 博客</h1><h2 id="2-1-创建-GitHub-仓库"><a href="#2-1-创建-GitHub-仓库" class="headerlink" title="2.1 创建 GitHub 仓库"></a>2.1 创建 GitHub 仓库</h2><p>新建一个 Repositories, 存放博客项目文件。<br><img src="/images/20201006/4.png" alt="avatar"><br>新建一个名为“<span class="label warning">你的用户名.github.io</span>”的仓库。如果你的GIthub用户名是 <span class="label warning">test</span>，那么就新建 <span class="label warning">test.github.io</span>的仓库（必须是你的用户名，其它名称无效），由此可见，每一个 GitHub 账户最多只能创建一个这样可以直接使用域名访问的仓库。<br><img src="/images/20201006/5.png" alt="avatar"><br>跳转到该库界面，选择 Settings。<br><img src="/images/20201006/6.png" alt="avatar"><br>进入 Settings 后，下拉找到 GitHub pages 设置界面，点击 Choose a theme。<br><img src="/images/20201006/7.png" alt="avatar"><br>选择一个博客主题，然后点击 Select theme。<br><img src="/images/20201006/8.png" alt="avatar"><br>到这一步就已经可以访问自己的博客了。在地址栏输入：<span class="label warning">用户名.github.io</span> 就可以访问页面了。<br><img src="/images/20201006/9.png" alt="avatar"></p>
<h2 id="2-2-配置-SSH-Key"><a href="#2-2-配置-SSH-Key" class="headerlink" title="2.2 配置 SSH Key"></a>2.2 配置 SSH Key</h2><p>在 Windows 菜单里搜索启动 Git Bash，设置 user.name 和 user.email 的配置信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的 GitHub 用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的 GitHub 注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>生产SSH秘钥文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的 GitHub 注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>然后直接三个回车即可，默认不需要设置密码。<br>找到生成的 .ssh 的文件夹中的 id_rsa.pub 密钥，用记事本打开并复制里面的内容。<br><img src="/images/20201006/10.png" alt="avatar"><br>打开GitHub主页，进入个人设置 –&gt; SSH and GPG keys –&gt; New SSH key：<br>新建 New SSH key，将复制的内容粘贴到key中，title随便填，保存。<br><img src="/images/20201006/11.png" alt="avatar"><br>启动 Git Bash 输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com <span class="comment"># 注意邮箱地址不用改</span></span><br></pre></td></tr></table></figure>
<p>如果提示</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Are you sure you want to continue connnecting (yes/no)?</span><br></pre></td></tr></table></figure>
<p>输入 <span class="label default"> yes</span>，然后会看到：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
<p>看到这个信息说明 SSH 已配置成功！</p>
<h1 id="3-使用Hexo写博客"><a href="#3-使用Hexo写博客" class="headerlink" title="3 使用Hexo写博客"></a>3 使用Hexo写博客</h1><h2 id="3-1-安装Hexo"><a href="#3-1-安装Hexo" class="headerlink" title="3.1 安装Hexo"></a>3.1 安装Hexo</h2><p>在自己认为合适的地方创建博客文件夹，然后在该目录下右键点击 Git Bash Here，打开 Git 的控制台窗口，之后的所有操作都在 Git 控制台中进行，不要再使用 Windows 的控制台了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo <span class="comment"># 安装Hexo</span></span><br></pre></td></tr></table></figure>
<h2 id="3-2-初始化Hexo"><a href="#3-2-初始化Hexo" class="headerlink" title="3.2 初始化Hexo"></a>3.2 初始化Hexo</h2><p>仍在该目录下右键 Git Bash Here，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>输入以上命令后，hexo 会自动下载一些文件到这个目录，包括 node_modules，其中比较重要的几个文件的目录结构如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>
<p>输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g <span class="comment"># 生成</span></span><br><span class="line">hexo s <span class="comment"># 开启本地预览服务</span></span><br></pre></td></tr></table></figure>
<p>执行以上命令后，Hexo 就会在 public 文件夹生成相关 html 文件，这些文件将来都会提交到 GitHub 中。<br>打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000/</a> 即可看到博客内容，第一次初始化时Hexo已经自动生成了一篇名为 Hello World 的文章。<br><img src="/images/20201006/12.png" alt="avatar"></p>
<h2 id="3-3-配置-Hexo"><a href="#3-3-配置-Hexo" class="headerlink" title="3.3 配置 Hexo"></a>3.3 配置 Hexo</h2><p>在 Hexo 中有两种主要配置文件，其名称都是 _config.yml。其中，一种位于站点根目录下，主要包含 Hexo 本身的配置；另一种位于主题目录下，这种配置文件由主题坐着提供，主要用于配置主题相关选项。为了描述方便，在以下说明中，将前者称为<span class="label info">站点配置文件</span>，后者称为 <span class="label primary">主题配置文件</span>。<br>修改<span class="label info">站点配置文件</span>中有关 deploy 的部分，注意将 username 修改为你的 GitHub 用户名：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>并安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure>
<p>打开 Git Bash，输入 <span class="label danger">hexo d</span> 就会将本次所有改动的代码全部提交，没有改动的不会提交。<br>此时访问博客地址就和本地预览服务一样了。<br><img src="/images/20201006/13.png" alt="avatar"></p>
<h2 id="3-4-写第一篇博文"><a href="#3-4-写第一篇博文" class="headerlink" title="3.4 写第一篇博文"></a>3.4 写第一篇博文</h2><p>定位到 Hexo 根目录，执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&#x27;my-first-blog&#x27;</span></span><br></pre></td></tr></table></figure>
<p>Hexo 会在 _posts 下生成相关 md 文件。我们只需打开这个文件就可以编写博客了，一般完整格式如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，但可以修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空缺</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure>
<h1 id="4-美化主题"><a href="#4-美化主题" class="headerlink" title="4 美化主题"></a>4 美化主题</h1><h2 id="4-1-下载-Next-主题"><a href="#4-1-下载-Next-主题" class="headerlink" title="4.1 下载 Next 主题"></a>4.1 下载 Next 主题</h2><p>以 Next 主题为例，如果你熟悉 Git，建议使用克隆最新版本的方式，之后的更新可以通过 <span class="label danger">git pull</span> 来快速更新，而不用再下载压缩包替换。<br>使用 Git Bash 定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<h2 id="4-2-启用主题"><a href="#4-2-启用主题" class="headerlink" title="4.2 启用主题"></a>4.2 启用主题</h2><p>打开<span class="label info">站点配置文件</span>，找到 theme 字段，并将其值改为 next。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>至此，Next 主题安装完成。下一步我们验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 <span class="label danger">hexo clean</span> 命令来清除 Hexo 缓存。然后输入命令 <span class="label danger">hexo d</span> 开启本地预览服务，当命令行输出中提示：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>使用浏览器访问 <a href="http://localhost:4000/">http://localhost:4000/</a> ，检查站点是否正确运行。<br>当你看到站点的外观与下图所示类似时，说明已经成功安装 Next 主题。这是 Next 默认的 Scheme–Muse。<br><img src="/images/20201006/14.png" alt="avatar"><br>执行 <span class="label danger">hexo d</span>提交代码。终于，我们的博客已经搭建完毕，后续可以进一步美化博客主题，并不断充实博客内容。您可以通过以下连个网址查询具体的网站与主题配置以进一步完善您的网站。<br><a href="https://hexo.io/">Hexo框架官方文档</a><br><a href="http://theme-next.iissnan.com/">Next主题官方文档</a></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>开始耕耘你的网上花园吧！</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <categories>
        <category>工具教程</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
